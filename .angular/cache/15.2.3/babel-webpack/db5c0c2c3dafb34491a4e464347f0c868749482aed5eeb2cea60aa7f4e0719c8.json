{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CapitalizePipe {\n  transform(value, allWords = false) {\n    value = value.toLowerCase();\n    let names = value.split(' ');\n    if (allWords) {\n      names = names.map(name => {\n        name = name[0].toUpperCase() + name.substr(1).toLowerCase();\n        return name;\n      });\n    } else {\n      names[0] = names[0][0].toUpperCase() + names[0].substr(1).toLowerCase();\n    }\n    return names.join(' ');\n  }\n}\nCapitalizePipe.ɵfac = function CapitalizePipe_Factory(t) {\n  return new (t || CapitalizePipe)();\n};\nCapitalizePipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"capitalize\",\n  type: CapitalizePipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,cAAc;EAEvBC,SAAS,CAACC,KAAa,EAAEC,WAAoB,KAAK;IAE9CD,KAAK,GAAGA,KAAK,CAACE,WAAW,EAAE;IAC3B,IAAIC,KAAK,GAAaH,KAAK,CAACI,KAAK,CAAC,GAAG,CAAC;IAEtC,IAAIH,QAAQ,EAAE;MACVE,KAAK,GAAGA,KAAK,CAACE,GAAG,CAACC,IAAI,IAAG;QACrBA,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,CAACN,WAAW,EAAE;QAC3D,OAAOI,IAAI;MACf,CAAC,CAAC;KACL,MACI;MACDH,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACI,WAAW,EAAE,GAAGJ,KAAK,CAAC,CAAC,CAAC,CAACK,MAAM,CAAC,CAAC,CAAC,CAACN,WAAW,EAAE;;IAE3E,OAAOC,KAAK,CAACM,IAAI,CAAC,GAAG,CAAC;EAC1B;;;mBAjBSX,cAAc;AAAA;;;QAAdA,cAAc;EAAAY;AAAA","names":["CapitalizePipe","transform","value","allWords","toLowerCase","names","split","map","name","toUpperCase","substr","join","pure"],"sourceRoot":"","sources":["C:\\JMTE\\Angular\\03-pipes\\src\\app\\pipes\\capitalize.pipe.ts"],"sourcesContent":["// import { ValueTransformer } from '@angular/compiler/src/util';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'capitalize'\n})\nexport class CapitalizePipe implements PipeTransform {\n\n    transform(value: string, allWords: boolean = false): string {\n\n        value = value.toLowerCase();\n        let names: string[] = value.split(' ');\n\n        if (allWords) {\n            names = names.map(name => {\n                name = name[0].toUpperCase() + name.substr(1).toLowerCase();\n                return name;\n            });\n        }\n        else {\n            names[0] = names[0][0].toUpperCase() + names[0].substr(1).toLowerCase();\n        }\n        return names.join(' ');\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}