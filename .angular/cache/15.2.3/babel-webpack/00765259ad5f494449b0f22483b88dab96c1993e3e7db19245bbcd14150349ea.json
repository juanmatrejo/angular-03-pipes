{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class UnCapitalPipe {\n  transform(value, separator, uppercaseAll = false) {\n    let char;\n    let isSpace = true;\n    let result = '';\n    for (let idx = 0; idx < value.length; idx++) {\n      char = value.substring(idx, idx + 1);\n      if (char == ' ') {\n        isSpace = true;\n        result += separator;\n      } else {\n        if (isSpace) {\n          if (uppercaseAll) {\n            result += char.toLowerCase();\n          } else {\n            result += char.toUpperCase();\n          }\n        } else {\n          if (uppercaseAll) {\n            result += char.toUpperCase();\n          } else {\n            result += char.toLowerCase();\n          }\n        }\n        isSpace = false;\n      }\n    }\n    return result;\n  }\n}\nUnCapitalPipe.ɵfac = function UnCapitalPipe_Factory(t) {\n  return new (t || UnCapitalPipe)();\n};\nUnCapitalPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"unCapital\",\n  type: UnCapitalPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,aAAa;EAEtBC,SAAS,CAACC,KAAa,EAAEC,SAAiB,EAAEC,eAAwB,KAAK;IAErE,IAAIC,IAAY;IAChB,IAAIC,OAAO,GAAU,IAAI;IACzB,IAAIC,MAAM,GAAW,EAAE;IAEvB,KAAK,IAAIC,GAAG,GAAW,CAAC,EAAEA,GAAG,GAAGN,KAAK,CAACO,MAAM,EAAED,GAAG,EAAE,EAAE;MAEjDH,IAAI,GAAGH,KAAK,CAACQ,SAAS,CAACF,GAAG,EAAEA,GAAG,GAAG,CAAC,CAAC;MAEpC,IAAIH,IAAI,IAAI,GAAG,EAAE;QACbC,OAAO,GAAG,IAAI;QACdC,MAAM,IAAIJ,SAAS;OACtB,MACI;QACD,IAAIG,OAAO,EAAE;UACT,IAAIF,YAAY,EAAE;YACdG,MAAM,IAAIF,IAAI,CAACM,WAAW,EAAE;WAC/B,MACI;YACDJ,MAAM,IAAIF,IAAI,CAACO,WAAW,EAAE;;SAEnC,MACI;UACD,IAAIR,YAAY,EAAE;YACdG,MAAM,IAAIF,IAAI,CAACO,WAAW,EAAE;WAC/B,MACI;YACDL,MAAM,IAAIF,IAAI,CAACM,WAAW,EAAE;;;QAGpCL,OAAO,GAAG,KAAK;;;IAGvB,OAAOC,MAAM;EACjB;;;mBArCSP,aAAa;AAAA;;;QAAbA,aAAa;EAAAa;AAAA","names":["UnCapitalPipe","transform","value","separator","uppercaseAll","char","isSpace","result","idx","length","substring","toLowerCase","toUpperCase","pure"],"sourceRoot":"","sources":["C:\\JMTE\\Angular\\03-pipes\\src\\app\\pipes\\un-capital.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'unCapital'\n})\nexport class UnCapitalPipe implements PipeTransform {\n\n    transform(value: string, separator: string, uppercaseAll: boolean = false): string {\n\n        let char: string;\n        let isSpace: boolean=true;\n        let result: string = '';\n\n        for (let idx: number = 0; idx < value.length; idx++) {\n\n            char = value.substring(idx, idx + 1);\n\n            if (char == ' ') {\n                isSpace = true;\n                result += separator;\n            }\n            else {\n                if (isSpace) {\n                    if (uppercaseAll) {\n                        result += char.toLowerCase();\n                    }\n                    else {\n                        result += char.toUpperCase();\n                    }\n                }\n                else {\n                    if (uppercaseAll) {\n                        result += char.toUpperCase();\n                    }\n                    else {\n                        result += char.toLowerCase();\n                    }\n                }\n                isSpace = false;\n            }\n        }\n        return result;\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}